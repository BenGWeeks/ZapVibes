const a = "__FUIDT_CONTROLLER__", s = "__FUIDT_ELEMENT_METADATA__", i = "__FUIDT_HTML_ELEMENT_REFERENCE__", c = () => {
  let e = null;
  const n = {
    get selectedElement() {
      return e;
    },
    select: (r) => (l(r) && (e = r, o.observe(r.parentElement, {
      childList: !0,
      subtree: !1
    })), e && r && f(e, r) || n.withdraw(), e),
    withdraw: () => {
      e = null, o.disconnect();
    }
  }, o = new MutationObserver((r) => {
    if (e)
      for (const t of r)
        t.type === "childList" && Array.from(t.removedNodes).includes(e) && n.withdraw();
  });
  return n;
}, d = (e) => {
  e.defaultView && (e.defaultView[a] || (e.defaultView[a] = c()));
}, f = (e, n) => {
  const o = e[s];
  switch (o.type) {
    case "middleware":
      return o.references.has(n);
    default:
      return !1;
  }
}, l = (e) => !!(e && s in e && e.parentElement !== null);
function u(e, n) {
  var r;
  const o = e;
  return !!((r = o == null ? void 0 : o.ownerDocument) != null && r.defaultView && o instanceof o.ownerDocument.defaultView[(n == null ? void 0 : n.constructorName) ?? "HTMLElement"]);
}
const E = () => `${i}:${crypto.randomUUID()}`, w = () => {
  const e = /* @__PURE__ */ new WeakSet(), n = /* @__PURE__ */ new Map();
  return {
    add: (r) => {
      const t = E();
      return n.set(t, r), e.add(r), t;
    },
    get: (r) => {
      const t = n.get(r);
      if (t && e.has(t))
        return t;
    },
    has: (r) => e.has(r)
  };
}, _ = (e) => {
  const n = w();
  return [JSON.parse(
    JSON.stringify(e, (r, t) => u(t) ? n.add(t) : typeof t == "object" && t && Object.getPrototypeOf(t) !== Object.prototype && Object.getPrototypeOf(t) !== Array.prototype ? "toString" in t ? t.toString() : void 0 : t)
  ), n];
}, M = (e, n = T) => ({
  name: "@floating-ui/devtools",
  fn: (o) => {
    d(e);
    const [r, t] = _(
      n(o)
    );
    return Object.assign(
      o.elements.floating,
      {
        [s]: { references: t, serializedData: r, type: "middleware" }
      }
    ), {};
  }
}), T = (e) => ({
  ...e,
  type: "FloatingUIMiddleware"
});
export {
  M as devtools,
  M as middleware
};
