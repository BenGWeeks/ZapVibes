{"ast":null,"code":"import { __assign, __extends } from \"tslib\";\nimport * as React from 'react';\nimport { BaseDecorator } from './BaseDecorator';\nimport { findScrollableParent, getRect, getWindow, Async, EventGroup } from '../../Utilities';\nvar RESIZE_DELAY = 500;\nvar MAX_RESIZE_ATTEMPTS = 3;\n/**\n * A decorator to update decorated component on viewport or window resize events.\n *\n * @param ComposedComponent - decorated React component reference.\n */\nexport function withViewport(ComposedComponent) {\n  return /** @class */function (_super) {\n    __extends(WithViewportComponent, _super);\n    function WithViewportComponent(props) {\n      var _this = _super.call(this, props) || this;\n      _this._root = React.createRef();\n      _this._registerResizeObserver = function () {\n        var win = getWindow(_this._root.current);\n        _this._viewportResizeObserver = new win.ResizeObserver(_this._onAsyncResize);\n        _this._viewportResizeObserver.observe(_this._root.current);\n      };\n      _this._unregisterResizeObserver = function () {\n        if (_this._viewportResizeObserver) {\n          _this._viewportResizeObserver.disconnect();\n          delete _this._viewportResizeObserver;\n        }\n      };\n      /* Note: using lambda here because decorators don't seem to work in decorators. */\n      _this._updateViewport = function (withForceUpdate) {\n        var viewport = _this.state.viewport;\n        var viewportElement = _this._root.current;\n        var scrollElement = findScrollableParent(viewportElement);\n        var scrollRect = getRect(scrollElement);\n        var clientRect = getRect(viewportElement);\n        var updateComponent = function () {\n          if (withForceUpdate && _this._composedComponentInstance) {\n            _this._composedComponentInstance.forceUpdate();\n          }\n        };\n        var isSizeChanged = (clientRect && clientRect.width) !== viewport.width || (scrollRect && scrollRect.height) !== viewport.height;\n        if (isSizeChanged && _this._resizeAttempts < MAX_RESIZE_ATTEMPTS && clientRect && scrollRect) {\n          _this._resizeAttempts++;\n          _this.setState({\n            viewport: {\n              width: clientRect.width,\n              height: scrollRect.height\n            }\n          }, function () {\n            _this._updateViewport(withForceUpdate);\n          });\n        } else {\n          _this._resizeAttempts = 0;\n          updateComponent();\n        }\n      };\n      _this._async = new Async(_this);\n      _this._events = new EventGroup(_this);\n      _this._resizeAttempts = 0;\n      _this.state = {\n        viewport: {\n          width: 0,\n          height: 0\n        }\n      };\n      return _this;\n    }\n    WithViewportComponent.prototype.componentDidMount = function () {\n      var _this = this;\n      var _a = this.props,\n        delayFirstMeasure = _a.delayFirstMeasure,\n        disableResizeObserver = _a.disableResizeObserver,\n        skipViewportMeasures = _a.skipViewportMeasures;\n      var win = getWindow(this._root.current);\n      this._onAsyncResize = this._async.debounce(this._onAsyncResize, RESIZE_DELAY, {\n        leading: false\n      });\n      if (!skipViewportMeasures) {\n        if (!disableResizeObserver && this._isResizeObserverAvailable()) {\n          this._registerResizeObserver();\n        } else {\n          this._events.on(win, 'resize', this._onAsyncResize);\n        }\n        if (delayFirstMeasure) {\n          this._async.setTimeout(function () {\n            _this._updateViewport();\n          }, RESIZE_DELAY);\n        } else {\n          this._updateViewport();\n        }\n      }\n    };\n    WithViewportComponent.prototype.componentDidUpdate = function (previousProps) {\n      var previousSkipViewportMeasures = previousProps.skipViewportMeasures;\n      var _a = this.props,\n        disableResizeObserver = _a.disableResizeObserver,\n        skipViewportMeasures = _a.skipViewportMeasures;\n      var win = getWindow(this._root.current);\n      if (skipViewportMeasures !== previousSkipViewportMeasures) {\n        if (!skipViewportMeasures) {\n          if (!disableResizeObserver && this._isResizeObserverAvailable()) {\n            if (!this._viewportResizeObserver) {\n              this._registerResizeObserver();\n            }\n          } else {\n            this._events.on(win, 'resize', this._onAsyncResize);\n          }\n          this._updateViewport();\n        } else {\n          this._unregisterResizeObserver();\n          this._events.off(win, 'resize', this._onAsyncResize);\n        }\n      }\n    };\n    WithViewportComponent.prototype.componentWillUnmount = function () {\n      this._events.dispose();\n      this._async.dispose();\n      this._unregisterResizeObserver();\n    };\n    WithViewportComponent.prototype.render = function () {\n      var viewport = this.state.viewport;\n      var newViewport = viewport.width > 0 && viewport.height > 0 ? viewport : undefined;\n      return React.createElement(\"div\", {\n        className: \"ms-Viewport\",\n        ref: this._root,\n        style: {\n          minWidth: 1,\n          minHeight: 1\n        }\n      }, React.createElement(ComposedComponent, __assign({\n        ref: this._updateComposedComponentRef,\n        viewport: newViewport\n      }, this.props)));\n    };\n    WithViewportComponent.prototype.forceUpdate = function () {\n      this._updateViewport(true);\n    };\n    WithViewportComponent.prototype._onAsyncResize = function () {\n      this._updateViewport();\n    };\n    WithViewportComponent.prototype._isResizeObserverAvailable = function () {\n      var win = getWindow(this._root.current);\n      return win && win.ResizeObserver;\n    };\n    return WithViewportComponent;\n  }(BaseDecorator);\n}","map":{"version":3,"names":["__assign","__extends","React","BaseDecorator","findScrollableParent","getRect","getWindow","Async","EventGroup","RESIZE_DELAY","MAX_RESIZE_ATTEMPTS","withViewport","ComposedComponent","_super","WithViewportComponent","props","_this","call","_root","createRef","_registerResizeObserver","win","current","_viewportResizeObserver","ResizeObserver","_onAsyncResize","observe","_unregisterResizeObserver","disconnect","_updateViewport","withForceUpdate","viewport","state","viewportElement","scrollElement","scrollRect","clientRect","updateComponent","_composedComponentInstance","forceUpdate","isSizeChanged","width","height","_resizeAttempts","setState","_async","_events","prototype","componentDidMount","_a","delayFirstMeasure","disableResizeObserver","skipViewportMeasures","debounce","leading","_isResizeObserverAvailable","on","setTimeout","componentDidUpdate","previousProps","previousSkipViewportMeasures","off","componentWillUnmount","dispose","render","newViewport","undefined","createElement","className","ref","style","minWidth","minHeight","_updateComposedComponentRef"],"sources":["/workspaces/ZapVibes/node_modules/@fluentui/react/lib/utilities/decorators/withViewport.js"],"sourcesContent":["import { __assign, __extends } from \"tslib\";\nimport * as React from 'react';\nimport { BaseDecorator } from './BaseDecorator';\nimport { findScrollableParent, getRect, getWindow, Async, EventGroup } from '../../Utilities';\nvar RESIZE_DELAY = 500;\nvar MAX_RESIZE_ATTEMPTS = 3;\n/**\n * A decorator to update decorated component on viewport or window resize events.\n *\n * @param ComposedComponent - decorated React component reference.\n */\nexport function withViewport(ComposedComponent) {\n    return /** @class */ (function (_super) {\n        __extends(WithViewportComponent, _super);\n        function WithViewportComponent(props) {\n            var _this = _super.call(this, props) || this;\n            _this._root = React.createRef();\n            _this._registerResizeObserver = function () {\n                var win = getWindow(_this._root.current);\n                _this._viewportResizeObserver = new win.ResizeObserver(_this._onAsyncResize);\n                _this._viewportResizeObserver.observe(_this._root.current);\n            };\n            _this._unregisterResizeObserver = function () {\n                if (_this._viewportResizeObserver) {\n                    _this._viewportResizeObserver.disconnect();\n                    delete _this._viewportResizeObserver;\n                }\n            };\n            /* Note: using lambda here because decorators don't seem to work in decorators. */\n            _this._updateViewport = function (withForceUpdate) {\n                var viewport = _this.state.viewport;\n                var viewportElement = _this._root.current;\n                var scrollElement = findScrollableParent(viewportElement);\n                var scrollRect = getRect(scrollElement);\n                var clientRect = getRect(viewportElement);\n                var updateComponent = function () {\n                    if (withForceUpdate && _this._composedComponentInstance) {\n                        _this._composedComponentInstance.forceUpdate();\n                    }\n                };\n                var isSizeChanged = (clientRect && clientRect.width) !== viewport.width || (scrollRect && scrollRect.height) !== viewport.height;\n                if (isSizeChanged && _this._resizeAttempts < MAX_RESIZE_ATTEMPTS && clientRect && scrollRect) {\n                    _this._resizeAttempts++;\n                    _this.setState({\n                        viewport: {\n                            width: clientRect.width,\n                            height: scrollRect.height,\n                        },\n                    }, function () {\n                        _this._updateViewport(withForceUpdate);\n                    });\n                }\n                else {\n                    _this._resizeAttempts = 0;\n                    updateComponent();\n                }\n            };\n            _this._async = new Async(_this);\n            _this._events = new EventGroup(_this);\n            _this._resizeAttempts = 0;\n            _this.state = {\n                viewport: {\n                    width: 0,\n                    height: 0,\n                },\n            };\n            return _this;\n        }\n        WithViewportComponent.prototype.componentDidMount = function () {\n            var _this = this;\n            var _a = this.props, delayFirstMeasure = _a.delayFirstMeasure, disableResizeObserver = _a.disableResizeObserver, skipViewportMeasures = _a.skipViewportMeasures;\n            var win = getWindow(this._root.current);\n            this._onAsyncResize = this._async.debounce(this._onAsyncResize, RESIZE_DELAY, {\n                leading: false,\n            });\n            if (!skipViewportMeasures) {\n                if (!disableResizeObserver && this._isResizeObserverAvailable()) {\n                    this._registerResizeObserver();\n                }\n                else {\n                    this._events.on(win, 'resize', this._onAsyncResize);\n                }\n                if (delayFirstMeasure) {\n                    this._async.setTimeout(function () {\n                        _this._updateViewport();\n                    }, RESIZE_DELAY);\n                }\n                else {\n                    this._updateViewport();\n                }\n            }\n        };\n        WithViewportComponent.prototype.componentDidUpdate = function (previousProps) {\n            var previousSkipViewportMeasures = previousProps.skipViewportMeasures;\n            var _a = this.props, disableResizeObserver = _a.disableResizeObserver, skipViewportMeasures = _a.skipViewportMeasures;\n            var win = getWindow(this._root.current);\n            if (skipViewportMeasures !== previousSkipViewportMeasures) {\n                if (!skipViewportMeasures) {\n                    if (!disableResizeObserver && this._isResizeObserverAvailable()) {\n                        if (!this._viewportResizeObserver) {\n                            this._registerResizeObserver();\n                        }\n                    }\n                    else {\n                        this._events.on(win, 'resize', this._onAsyncResize);\n                    }\n                    this._updateViewport();\n                }\n                else {\n                    this._unregisterResizeObserver();\n                    this._events.off(win, 'resize', this._onAsyncResize);\n                }\n            }\n        };\n        WithViewportComponent.prototype.componentWillUnmount = function () {\n            this._events.dispose();\n            this._async.dispose();\n            this._unregisterResizeObserver();\n        };\n        WithViewportComponent.prototype.render = function () {\n            var viewport = this.state.viewport;\n            var newViewport = viewport.width > 0 && viewport.height > 0 ? viewport : undefined;\n            return (React.createElement(\"div\", { className: \"ms-Viewport\", ref: this._root, style: { minWidth: 1, minHeight: 1 } },\n                React.createElement(ComposedComponent, __assign({ ref: this._updateComposedComponentRef, viewport: newViewport }, this.props))));\n        };\n        WithViewportComponent.prototype.forceUpdate = function () {\n            this._updateViewport(true);\n        };\n        WithViewportComponent.prototype._onAsyncResize = function () {\n            this._updateViewport();\n        };\n        WithViewportComponent.prototype._isResizeObserverAvailable = function () {\n            var win = getWindow(this._root.current);\n            return win && win.ResizeObserver;\n        };\n        return WithViewportComponent;\n    }(BaseDecorator));\n}\n//# sourceMappingURL=withViewport.js.map"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}