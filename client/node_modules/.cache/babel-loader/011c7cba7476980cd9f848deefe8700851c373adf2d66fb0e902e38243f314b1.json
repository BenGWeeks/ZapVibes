{"ast":null,"code":"var _jsxFileName = \"/workspaces/ZapVibes/client/src/pages/admin/LightningWallet.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { TextField, PrimaryButton } from '@fluentui/react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LightningWallet = () => {\n  _s();\n  const [balance, setBalance] = useState(0);\n  const fetchBalance = async () => {\n    try {\n      const response = await fetch(`${process.env.REACT_APP_SERVER_URL}/zebedee/balance`);\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const data = await response.json();\n      setBalance(data.data.balance);\n    } catch (error) {\n      console.log('There was a problem with the fetch operation: ' + error.message);\n    }\n\n    // Fetch the balance from the Zebedee API\n    try {\n      const response = await fetch(`${process.env.REACT_APP_SERVER_URL}/zebedee/balance`, {\n        headers: {\n          'Content-Type': 'application/json'\n          //'api-key': apiKey,\n        }\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const data = await response.json();\n      setBalance(data.data.balance);\n    } catch (error) {\n      console.log('There was a problem with the fetch operation: ' + error.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Lightning Wallet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Balance: \", balance]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PrimaryButton, {\n      onClick: fetchBalance,\n      children: \"Refresh Balance\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(LightningWallet, \"dmCprm+oBH8rSSNQ/2mjledydfo=\");\n_c = LightningWallet;\nexport default LightningWallet;\nvar _c;\n$RefreshReg$(_c, \"LightningWallet\");","map":{"version":3,"names":["React","useState","useEffect","TextField","PrimaryButton","jsxDEV","_jsxDEV","LightningWallet","_s","balance","setBalance","fetchBalance","response","fetch","process","env","REACT_APP_SERVER_URL","ok","Error","status","data","json","error","console","log","message","headers","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/workspaces/ZapVibes/client/src/pages/admin/LightningWallet.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { TextField, PrimaryButton } from '@fluentui/react';\n\nconst LightningWallet = () => {\n  const [balance, setBalance] = useState(0);\n\n  const fetchBalance = async () => {\n    try {\n      const response = await fetch(`${process.env.REACT_APP_SERVER_URL}/zebedee/balance`);\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const data = await response.json();\n      setBalance(data.data.balance);\n    } catch (error) {\n      console.log('There was a problem with the fetch operation: ' + error.message);\n    }\n\n    // Fetch the balance from the Zebedee API\n    try {\n      const response = await fetch(`${process.env.REACT_APP_SERVER_URL}/zebedee/balance`, {\n        headers: {\n          'Content-Type': 'application/json',\n          //'api-key': apiKey,\n        },\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const data = await response.json();\n      setBalance(data.data.balance);\n    } catch (error) {\n      console.log('There was a problem with the fetch operation: ' + error.message);\n    }\n  };\n\n  return (\n    <div>\n      <h1>Lightning Wallet</h1>\n      <p>Balance: {balance}</p>\n      <PrimaryButton onClick={fetchBalance}>Refresh Balance</PrimaryButton>\n    </div>\n  );\n};\n\nexport default LightningWallet;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,EAAEC,aAAa,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3D,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC;EAEzC,MAAMU,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEC,OAAO,CAACC,GAAG,CAACC,oBAAqB,kBAAiB,CAAC;MACnF,IAAI,CAACJ,QAAQ,CAACK,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAE,uBAAsBN,QAAQ,CAACO,MAAO,EAAC,CAAC;MAC3D;MACA,MAAMC,IAAI,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;MAClCX,UAAU,CAACU,IAAI,CAACA,IAAI,CAACX,OAAO,CAAC;IAC/B,CAAC,CAAC,OAAOa,KAAK,EAAE;MACdC,OAAO,CAACC,GAAG,CAAC,gDAAgD,GAAGF,KAAK,CAACG,OAAO,CAAC;IAC/E;;IAEA;IACA,IAAI;MACF,MAAMb,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEC,OAAO,CAACC,GAAG,CAACC,oBAAqB,kBAAiB,EAAE;QAClFU,OAAO,EAAE;UACP,cAAc,EAAE;UAChB;QACF;MACF,CAAC,CAAC;MACF,IAAI,CAACd,QAAQ,CAACK,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAE,uBAAsBN,QAAQ,CAACO,MAAO,EAAC,CAAC;MAC3D;MACA,MAAMC,IAAI,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;MAClCX,UAAU,CAACU,IAAI,CAACA,IAAI,CAACX,OAAO,CAAC;IAC/B,CAAC,CAAC,OAAOa,KAAK,EAAE;MACdC,OAAO,CAACC,GAAG,CAAC,gDAAgD,GAAGF,KAAK,CAACG,OAAO,CAAC;IAC/E;EACF,CAAC;EAED,oBACEnB,OAAA;IAAAqB,QAAA,gBACErB,OAAA;MAAAqB,QAAA,EAAI;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACzBzB,OAAA;MAAAqB,QAAA,GAAG,WAAS,EAAClB,OAAO;IAAA;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACzBzB,OAAA,CAACF,aAAa;MAAC4B,OAAO,EAAErB,YAAa;MAAAgB,QAAA,EAAC;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAe,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClE,CAAC;AAEV,CAAC;AAACvB,EAAA,CAxCID,eAAe;AAAA0B,EAAA,GAAf1B,eAAe;AA0CrB,eAAeA,eAAe;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}